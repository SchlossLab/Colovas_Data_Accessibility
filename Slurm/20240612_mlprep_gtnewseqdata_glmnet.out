
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-conda-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #!/usr/bin/env Rscript
> #prep dataset for ML modeling 
> #
> # 20240429 MLprep.R of groundtruth, groundtruth_subset30
> # using mikropml and model glmnet to train model to predict
> # variable new_seq_data
> #
> #library statements
> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.4     ✔ readr     2.1.5
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.4.4     ✔ tibble    3.2.1
✔ lubridate 1.9.3     ✔ tidyr     1.3.0
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(tidytext)
> library(jsonlite)

Attaching package: ‘jsonlite’

The following object is masked from ‘package:purrr’:

    flatten

> library(mikropml)
> 
> # 20240528 - using gtss30/generic files generated by snakemake------------------
> # practice using mikropml and getting formatting right
> 
> 
> # load files
> 
> # for snakemake implementation
> # {input.rscript} {input.metadata} {input.tokens} {wildcard.ml_variables} {output.rds}
> # input <- commandArgs(trailingOnly = TRUE)
> # metadata <- input[1]
> # ml_var_snake <- input[3]
> # ml_var <- c("paper", ml_var_snake, "container.title")
> # clean_csv <- input[2]
> # output_file <- input[4]
> # clean_text <- read.csv(clean_csv)
> # metadata <- read.csv(metadata)
> 
> # #other implementation
> # clean_text <- read.csv("Data/gt_subset_30_tokens.csv.gz")
> # metadata <- read.csv("Data/gt_subset_30.csv")
> # ml_var_snake <- "new_seq_data"
> # ml_var <- c("paper", ml_var_snake, "container.title")
> 
> clean_text <- read.csv("Data/groundtruth.tokens.csv.gz")
> metadata <- read.csv("Data/groundtruth.csv")
> ml_var_snake <- "new_seq_data"
> ml_var <- c("paper", ml_var_snake, "container.title")
> output_file <- "Data/groundtruth.new_seq_data.preprocessed.RDS"
> 
> 
> # set up the format of the clean_text dataframe 
> 
> # each token is a column 
> clean_tibble <- pivot_wider(clean_text, id_cols = c(paper_doi),
+                            names_from = paper_tokens, values_from = frequency,
+                            names_sort = TRUE, values_fill = 0) 
> 
> # need metadata for the papers
> need_meta <- select(metadata, all_of(ml_var))
> 
> # join clean_tibble and need_meta 
> full_ml <- left_join(need_meta, clean_tibble, by = join_by(paper == paper_doi))
> 
> # remove paper doi
> full_ml <- select(full_ml, !paper)
> 
> # use mikropml::preprocess_data on dataset
> full_ml_pre <- preprocess_data(full_ml, outcome_colname = ml_var_snake)
Using 'new_seq_data' as the outcome column.
Error in apply_fn(features, 2, function(x) { : 
  The total size of ‘X’ (of class ‘matrix’ and type ‘character’) is 605.28 MiB and the total size of the other argument is 7.91 KiB. With 1 workers, this translates to 605.29 MiB per worker needed for future_apply(), which exceeds the maximum allowed size of 500.00 MiB (option 'future.globals.maxSize').
Calls: preprocess_data -> process_novar_feats -> apply_fn
Execution halted
