
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-conda-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #!/usr/bin/env Rscript
> # trainML.R
> #
> #
> #
> # library statements
> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.3     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.5.1     ✔ tibble    3.2.1
✔ lubridate 1.9.3     ✔ tidyr     1.3.0
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(tidytext)
> library(mikropml)
> 
> 
> # model="Data/ml_results/{datasets}/rf/rf.{seeds}.{ml_variables}.model.RDS", 
> # perf="Data/ml_results/{datasets}/rf/rf.{seeds}.{ml_variables}.performance.csv"
> # dir = "Data/ml_results/{datasets}/rf"
>        
> # input:
> #    rds = "Data/{datasets}.{ml_variables}.preprocessed.RDS", 
> #    rscript = "Code/trainML_rf.R",
> #    dir = "Data/ml_results/{datasets}/rf"
> # output:
> #    model="Data/ml_results/{datasets}/rf/rf.{seeds}.{ml_variables}.model.RDS", 
> #    perf="Data/ml_results/{datasets}/rf/rf.{seeds}.{ml_variables}.performance.csv", 
> #    #prediction="Data/ml_results/{datasets}/rf/rf.{seeds}.{ml_variables}.prediction.csv", 
> #    hp_performance="Data/ml_results/{datasets}/rf/rf.{seeds}.{ml_variables}.hp_performance.csv"
> 
> # # {input.rscript} {input.rds} {wildcards.seeds} {wildcards.ml_variables} {input.dir}
> # input <- commandArgs(trailingOnly = TRUE)
> # rds <- input[1]
> # data_processed <- readRDS(rds)
> # seed <- as.numeric(input[2])
> # ml_var_snake <- input[3]
> # output_dir <- input[4]
> 
> #local checks data_availability 
> rds <- "Data/groundtruth.data_availability.preprocessed.RDS"
> data_processed <- readRDS(rds)
> best_seed <- 44
> ml_var_snake <- "data_availability"
> output_dir <- paste0("Data/ml_results/groundtruth/rf/{ml_var_snake}")
> 
> ## from kelly 
> # # 2. We can do 5-fold cross validation for a single seed to get the best mtry value.
> # results_cv <- run_ml(
> #   train_data,
> #   method = "rf",
> #   outcome_colname = "your_outcome",
> #   training_frac = 1.0,
> #   seed = best_seed,
> #   kfold = 5,
> #   cv_times = 100,
> #   calculate_performance = FALSE # don't calc performance, there's no test data
> # )
> 
> 
> # run model using mikropml::run_ml
> results_cv <- run_ml(data_processed$dat_transformed,
+                    method = "rf",  
+                    outcome_colname = ml_var_snake,
+                    training_frac = .99,
+                    kfold = 5, 
+                    cv_times = 100, 
+                    hyperparameters = list(mtry =  c(84, 100, 150, 200, 300)),
+                    seed = best_seed, 
+                    calculate_performance = FALSE)
Using 'data_availability' as the outcome column.
Training the model...
Loading required package: lattice

Attaching package: ‘caret’

The following object is masked from ‘package:mikropml’:

    compare_models

The following object is masked from ‘package:purrr’:

    lift

