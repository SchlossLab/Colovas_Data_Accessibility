
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-conda-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #!/usr/bin/env Rscript
> #create df of links to check with removed punctuation at the end 
> #
> #
> #
> #library statements
> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.4     ✔ readr     2.1.5
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.5.2     ✔ tibble    3.3.0
✔ lubridate 1.9.4     ✔ tidyr     1.3.1
✔ purrr     1.0.4     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(httr2)
> 
> #read in linkrot file 
> linkrot<-read_csv("Data/final/linkrot_combined.csv.gz") 
Rows: 244845 Columns: 10
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr (8): html_filename, html_tag, link_address, link_text, hostname, domain,...
dbl (1): link_status
lgl (1): is_alive

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> 
> #12045 links ending with punctuation/ and not 200 status (link OK)
> punctuation <-linkrot %>%
+     filter(str_ends(link_address, "\\.") | str_ends(link_address, "\\)")) %>% # remove only terminal . and )
+     filter(!str_detect(link_address, "\\(")) %>% #exclude anything with an open (
+     filter(link_status != 200)
> 
> 
> #remove the final punctuation
> punctuation <-punctuation %>%
+     mutate(no_punctuation = str_sub(link_address, start = 1, end = -2)) 
> 
> #from linkrot - original function that follows links 
> # 20250624 - we don't really care in a functional sense if we're redirected
> get_site_status <- function(websiteurl) {
+   
+   response <- tryCatch( {request(websiteurl) %>% 
+       req_options(followlocation = TRUE) %>% # this line 'follows' links that redirect the user, 
+       req_error(is_error = ~ FALSE) %>% 
+       req_retry(retry_on_failure = FALSE) %>% 
+       req_perform()}, error = \(x){list(status_code = 404) } )
+   
+   numeric_response <- response$status_code
+   return(numeric_response)
+   
+ }
> 
> 
> 
> punctuation_map <-punctuation %>%
+     mutate(no_punctuation_status = map_dbl(no_punctuation, get_site_status, 
+                                     .progress = TRUE))
Setting `max_tries = 2`.
Setting `max_tries = 2`.
Setting `max_tries = 2`.
Setting `max_tries = 2`.
 ■■■■                              11% |  ETA: 16m
Setting `max_tries = 2`.
 ■■■■■                             14% |  ETA: 25m
Setting `max_tries = 2`.
 ■■■■■■                            17% |  ETA: 21m
Setting `max_tries = 2`.
Setting `max_tries = 2`.
Setting `max_tries = 2`.
 ■■■■■■■■■                         25% |  ETA: 13m
Setting `max_tries = 2`.
 ■■■■■■■■■                         28% |  ETA: 11m
Setting `max_tries = 2`.
Setting `max_tries = 2`.
Setting `max_tries = 2`.
 ■■■■■■■■■■■■                      36% |  ETA:  8m
Setting `max_tries = 2`.
Setting `max_tries = 2`.
Setting `max_tries = 2`.
 ■■■■■■■■■■■■■■                    44% |  ETA:  6m
Setting `max_tries = 2`.
Setting `max_tries = 2`.
Setting `max_tries = 2`.
 ■■■■■■■■■■■■■■■■■                 53% |  ETA:  4m
Setting `max_tries = 2`.
Setting `max_tries = 2`.
Setting `max_tries = 2`.
Setting `max_tries = 2`.
Setting `max_tries = 2`.
Setting `max_tries = 2`.
 ■■■■■■■■■■■■■■■■■■■■■■            69% |  ETA:  2m
Setting `max_tries = 2`.
Setting `max_tries = 2`.
 ■■■■■■■■■■■■■■■■■■■■■■■           75% |  ETA:  2m
Setting `max_tries = 2`.
Setting `max_tries = 2`.
Setting `max_tries = 2`.
Setting `max_tries = 2`.
 ■■■■■■■■■■■■■■■■■■■■■■■■■■■       86% |  ETA: 45s
Setting `max_tries = 2`.
 ■■■■■■■■■■■■■■■■■■■■■■■■■■■■      89% |  ETA: 36s
Setting `max_tries = 2`.
 ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■     92% |  ETA: 26s
Setting `max_tries = 2`.
Setting `max_tries = 2`.
Setting `max_tries = 2`.
> 
> punctuation_map %>% count(link_status, no_punctuation_status)
# A tibble: 4 × 3
  link_status no_punctuation_status     n
        <dbl>                 <dbl> <int>
1         403                   403     1
2         404                   200    17
3         404                   404    14
4         503                   503     4
> 
> write_csv(punctuation_map, file = "Data/linkrot_datasets/no_punctuation_status.csv")
> 
> 
> proc.time()
   user  system elapsed 
  4.518   0.352 293.738 
